import math


def u(t_td):
    return t_td/100


def epsilon_zero(u):
    epsilon_0 = 23 + 26/60 + 21.448/3600 
    epsilon_0 += (-4680.93*u - 1.55*u**2 + 1999.25*u**3 - 51.38*u**4 - 249.67*u**5 - 39.05*u**6+ 7.12*u**7 + 27.87*u**8 + 5.79*u**9 + 2.45*u**10)/3600
    return epsilon_0





def epsilon(epsilon_zero, delta_epsilon):
    return epsilon_zero + delta_epsilon


de_array = [
    [0, 0, 0, 0, 1, 92025, 8.9],
    [-2, 0, 0, 2, 2, 5736, -3.1],
    [0, 0, 0, 2, 2, 977, -0.5],
    [0, 0, 0, 0, 2, -895, 0.5],
    [0, 1, 0, 0, 0, 54, -0.1],
    [-2, 1, 0, 2, 2, 224, -0.6],
    [0, 0, 1, 2, 2, 129, -0.1],
    [-2, -1, 0, 2, 2, -95, 0.3],
    [0, 0, 1, 0, 0, -7, 0],
    [0, 0, 0, 2, 1, 200, 0],
    [-2, 0, 0, 2, 1, -70, 0],
    [0, 0, -1, 2, 2, -53, 0],
    [0, 0, 1, 0, 1, -33, 0],
    [2, 0, -1, 2, 2, 26, 0],
    [0, 0, -1, 0, 1, 32, 0],
    [0, 0, 1, 2, 1, 27, 0],
    [0, 0, -2, 2, 1, -24, 0],
    [2, 0, 0, 2, 2, 16, 0],
    [0, 0, 2, 2, 2, 13, 0],
    [-2, 0, 1, 2, 2, -12, 0],
    [0, 0, -1, 2, 1, -10, 0],
    [2, 0, -1, 0, 1, -8, 0],
    [-2, 2, 0, 2, 2, 7, 0],
    [0, 1, 0, 0, 1, 9, 0],
    [-2, 0, 1, 0, 1, 7, 0],
    [0, -1, 0, 0, 1, 6, 0],
    [2, 0, -1, 2, 1, 5, 0],
    [2, 0, 1, 2, 2, 3, 0],
    [0, 1, 0, 2, 2, -3, 0],
    [0, -1, 0, 2, 2, 3, 0],
    [2, 0, 0, 2, 1, 3, 0],
    [-2, 0, 2, 2, 2, -3, 0],
    [-2, 0, 1, 2, 1, -3, 0],
    [2, 0, -2, 0, 1, 3, 0],
    [2, 0, 0, 0, 1, 3, 0],
    [-2, -1, 0, 2, 1, 3, 0],
    [-2, 0, 0, 0, 1, 3, 0],
    [0, 0, 2, 2, 1, 3, 0],
]


def delta_epsilon(t_td):
    t = t_td
    d = math.radians((297.85036 + 445267.11148*t - 0.0019142*t**2 + t**3/189474) % 360)
    m = math.radians((357.52772 + 35999.05034*t - 0.0001603*t*t - t*t*t/300000) % 360)
    m_aksen = math.radians((134.96298 + 477198.867398*t + 0.0086972*t*t + t*t*t/56250) % 360)
    f = math.radians((93.27191 + 483202.017538*t - 0.0036825*t*t + t*t*t/327270) % 360)
    omega = math.radians((125.04452 - 1934.136261*t + 0.0020708*t*t + t*t*t/450000) % 360)

    result = 0
    for i in range(len(de_array)):
            result += (de_array[i][5] + de_array[i][6]*t) * math.cos(de_array[i][0] * d + de_array[i][1] * m + de_array[i][2] * m_aksen + de_array[i][3] * f + de_array[i][4] * omega)

    print(result)
    return result